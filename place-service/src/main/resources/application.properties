spring.application.name=place-service
# Database
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Gmail SMTP 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# 이메일 발신자 설정
app.email.sender=${EMAIL_SENDER}
app.email.sender-name=Trip Helper

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.open-in-view=false
jwt.secret=${JWT_SECRET}
jwt.access-token-validity=3600
jwt.refresh-token-validity=604800

# Redis Configuration
spring.redis.host=${REDIS_URL}
# spring.redis.port=6379
# spring.redis.port=31387
spring.redis.port = ${REDIS_PORT}
spring.redis.timeout=30000

# OAuth2 Configuration - Kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI}
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.provider=kakao

# OAuth2 - Kakao Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# OAuth2 Configuration - Naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URI}
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.provider=naver
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_pos

# OAuth2 - Naver Provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Encoding
spring.servlet.encoding.charset=UTF-8
spring.servlet.encoding.force=true

# Server
spring.main.allow-bean-definition-overriding=true
server.port=8084
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

# JWT Configuration
app.jwt.secret=${APP_JWT_SECRET}
app.jwt.access-token-validity-in-seconds=3600
app.jwt.refresh-token-validity-in-seconds=604800
app.jwt.header=Authorization
app.jwt.prefix=Bearer

# API Keys
app.api.key=${APP_API_KEY}
tmap.api.key=${TMAP_API_KEY}
tmap.api.base-url=https://apis.openapi.sk.com/tmap

# Logging
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.level.com.example.TripSpring=DEBUG
logging.level.org.springframework.security=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Swagger UI 설정
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.api-docs.path=/v3/api-docs
springdoc.default-consumes-media-type=application/json;charset=UTF-8
springdoc.default-produces-media-type=application/json;charset=UTF-8

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Security Configuration
security.require-ssl=false
security.basic.enabled=false

# OAuth2 디버깅을 위한 로깅 설정
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG 

# API Keys
app.api.kakao=${KAKAO_API_KEY}
app.api.google=${GOOGLE_API_KEY}
app.api.naver.client-id=${NAVER_API_CLIENT_ID}
app.api.naver.client-secret=${NAVER_API_CLIENT_SECRET}
app.api.naver.client-id2=${NAVER_API_CLIENT_ID2}
app.api.naver.client-secret2=${NAVER_API_CLIENT_SECRET2}
app.api.foursquare=${FOURSQUARE_API_KEY}
app.api.tmap=${TMAP_API_KEY2}
app.api.openai=${OPENAI_API_KEY}
app.api.tourism=${TOURISM_API_KEY}

app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS}